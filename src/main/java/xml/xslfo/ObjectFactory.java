//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.03 at 10:01:50 AM CST 
//


package xml.xslfo;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the xml.xslfo package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: xml.xslfo
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SinglePageMasterReference }
     * 
     */
    public SinglePageMasterReference createSinglePageMasterReference() {
        return new SinglePageMasterReference();
    }

    /**
     * Create an instance of {@link Leader }
     * 
     */
    public Leader createLeader() {
        return new Leader();
    }

    /**
     * Create an instance of {@link Character }
     * 
     */
    public Character createCharacter() {
        return new Character();
    }

    /**
     * Create an instance of {@link ExternalGraphic }
     * 
     */
    public ExternalGraphic createExternalGraphic() {
        return new ExternalGraphic();
    }

    /**
     * Create an instance of {@link InstreamForeignObject }
     * 
     */
    public InstreamForeignObject createInstreamForeignObject() {
        return new InstreamForeignObject();
    }

    /**
     * Create an instance of {@link Inline }
     * 
     */
    public Inline createInline() {
        return new Inline();
    }

    /**
     * Create an instance of {@link Marker }
     * 
     */
    public Marker createMarker() {
        return new Marker();
    }

    /**
     * Create an instance of {@link PageNumber }
     * 
     */
    public PageNumber createPageNumber() {
        return new PageNumber();
    }

    /**
     * Create an instance of {@link PageNumberCitation }
     * 
     */
    public PageNumberCitation createPageNumberCitation() {
        return new PageNumberCitation();
    }

    /**
     * Create an instance of {@link BasicLink }
     * 
     */
    public BasicLink createBasicLink() {
        return new BasicLink();
    }

    /**
     * Create an instance of {@link BidiOverride }
     * 
     */
    public BidiOverride createBidiOverride() {
        return new BidiOverride();
    }

    /**
     * Create an instance of {@link InlineContainer }
     * 
     */
    public InlineContainer createInlineContainer() {
        return new InlineContainer();
    }

    /**
     * Create an instance of {@link Block }
     * 
     */
    public Block createBlock() {
        return new Block();
    }

    /**
     * Create an instance of {@link InitialPropertySet }
     * 
     */
    public InitialPropertySet createInitialPropertySet() {
        return new InitialPropertySet();
    }

    /**
     * Create an instance of {@link MultiToggle }
     * 
     */
    public MultiToggle createMultiToggle() {
        return new MultiToggle();
    }

    /**
     * Create an instance of {@link BlockContainer }
     * 
     */
    public BlockContainer createBlockContainer() {
        return new BlockContainer();
    }

    /**
     * Create an instance of {@link Table }
     * 
     */
    public Table createTable() {
        return new Table();
    }

    /**
     * Create an instance of {@link TableColumn }
     * 
     */
    public TableColumn createTableColumn() {
        return new TableColumn();
    }

    /**
     * Create an instance of {@link TableHeader }
     * 
     */
    public TableHeader createTableHeader() {
        return new TableHeader();
    }

    /**
     * Create an instance of {@link TableRow }
     * 
     */
    public TableRow createTableRow() {
        return new TableRow();
    }

    /**
     * Create an instance of {@link TableCell }
     * 
     */
    public TableCell createTableCell() {
        return new TableCell();
    }

    /**
     * Create an instance of {@link ListBlock }
     * 
     */
    public ListBlock createListBlock() {
        return new ListBlock();
    }

    /**
     * Create an instance of {@link ListItem }
     * 
     */
    public ListItem createListItem() {
        return new ListItem();
    }

    /**
     * Create an instance of {@link ListItemLabel }
     * 
     */
    public ListItemLabel createListItemLabel() {
        return new ListItemLabel();
    }

    /**
     * Create an instance of {@link TableAndCaption }
     * 
     */
    public TableAndCaption createTableAndCaption() {
        return new TableAndCaption();
    }

    /**
     * Create an instance of {@link TableCaption }
     * 
     */
    public TableCaption createTableCaption() {
        return new TableCaption();
    }

    /**
     * Create an instance of {@link Wrapper }
     * 
     */
    public Wrapper createWrapper() {
        return new Wrapper();
    }

    /**
     * Create an instance of {@link RetrieveMarker }
     * 
     */
    public RetrieveMarker createRetrieveMarker() {
        return new RetrieveMarker();
    }

    /**
     * Create an instance of {@link MultiSwitch }
     * 
     */
    public MultiSwitch createMultiSwitch() {
        return new MultiSwitch();
    }

    /**
     * Create an instance of {@link MultiCase }
     * 
     */
    public MultiCase createMultiCase() {
        return new MultiCase();
    }

    /**
     * Create an instance of {@link MultiProperties }
     * 
     */
    public MultiProperties createMultiProperties() {
        return new MultiProperties();
    }

    /**
     * Create an instance of {@link MultiPropertySet }
     * 
     */
    public MultiPropertySet createMultiPropertySet() {
        return new MultiPropertySet();
    }

    /**
     * Create an instance of {@link Float }
     * 
     */
    public Float createFloat() {
        return new Float();
    }

    /**
     * Create an instance of {@link Footnote }
     * 
     */
    public Footnote createFootnote() {
        return new Footnote();
    }

    /**
     * Create an instance of {@link FootnoteBody }
     * 
     */
    public FootnoteBody createFootnoteBody() {
        return new FootnoteBody();
    }

    /**
     * Create an instance of {@link ListItemBody }
     * 
     */
    public ListItemBody createListItemBody() {
        return new ListItemBody();
    }

    /**
     * Create an instance of {@link TableFooter }
     * 
     */
    public TableFooter createTableFooter() {
        return new TableFooter();
    }

    /**
     * Create an instance of {@link TableBody }
     * 
     */
    public TableBody createTableBody() {
        return new TableBody();
    }

    /**
     * Create an instance of {@link RegionBefore }
     * 
     */
    public RegionBefore createRegionBefore() {
        return new RegionBefore();
    }

    /**
     * Create an instance of {@link RegionStart }
     * 
     */
    public RegionStart createRegionStart() {
        return new RegionStart();
    }

    /**
     * Create an instance of {@link RegionAfter }
     * 
     */
    public RegionAfter createRegionAfter() {
        return new RegionAfter();
    }

    /**
     * Create an instance of {@link ColorProfile }
     * 
     */
    public ColorProfile createColorProfile() {
        return new ColorProfile();
    }

    /**
     * Create an instance of {@link Flow }
     * 
     */
    public Flow createFlow() {
        return new Flow();
    }

    /**
     * Create an instance of {@link ConditionalPageMasterReference }
     * 
     */
    public ConditionalPageMasterReference createConditionalPageMasterReference() {
        return new ConditionalPageMasterReference();
    }

    /**
     * Create an instance of {@link RepeatablePageMasterAlternatives }
     * 
     */
    public RepeatablePageMasterAlternatives createRepeatablePageMasterAlternatives() {
        return new RepeatablePageMasterAlternatives();
    }

    /**
     * Create an instance of {@link PageSequence }
     * 
     */
    public PageSequence createPageSequence() {
        return new PageSequence();
    }

    /**
     * Create an instance of {@link Title }
     * 
     */
    public Title createTitle() {
        return new Title();
    }

    /**
     * Create an instance of {@link StaticContent }
     * 
     */
    public StaticContent createStaticContent() {
        return new StaticContent();
    }

    /**
     * Create an instance of {@link LayoutMasterSet }
     * 
     */
    public LayoutMasterSet createLayoutMasterSet() {
        return new LayoutMasterSet();
    }

    /**
     * Create an instance of {@link SimplePageMaster }
     * 
     */
    public SimplePageMaster createSimplePageMaster() {
        return new SimplePageMaster();
    }

    /**
     * Create an instance of {@link RegionBody }
     * 
     */
    public RegionBody createRegionBody() {
        return new RegionBody();
    }

    /**
     * Create an instance of {@link RegionEnd }
     * 
     */
    public RegionEnd createRegionEnd() {
        return new RegionEnd();
    }

    /**
     * Create an instance of {@link PageSequenceMaster }
     * 
     */
    public PageSequenceMaster createPageSequenceMaster() {
        return new PageSequenceMaster();
    }

    /**
     * Create an instance of {@link RepeatablePageMasterReference }
     * 
     */
    public RepeatablePageMasterReference createRepeatablePageMasterReference() {
        return new RepeatablePageMasterReference();
    }

    /**
     * Create an instance of {@link Root }
     * 
     */
    public Root createRoot() {
        return new Root();
    }

    /**
     * Create an instance of {@link Declarations }
     * 
     */
    public Declarations createDeclarations() {
        return new Declarations();
    }

}
